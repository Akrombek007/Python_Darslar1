
# PyQt5 Darslari uchun Qo'llanma - Kirish

## 1.1. PyQt5 nima va u qanday ishlaydi?

PyQt5 - bu Python dasturlash tili uchun Qt framework'ini o'rnatishda foydalaniladigan kutubxona. Qt - bu multiplatforma GUI (Graphical User Interface) kutubxonasi bo'lib, turli operatsion tizimlar (Windows, Linux, macOS) uchun grafik interfeyslarni yaratish imkonini beradi.

PyQt5 yordamida GUI ilovalari yaratish uchun quyidagi asosiy komponentlar mavjud:
- **QApplication** - Bu komponent dastur yaratishda ishlatiladi va GUI elementlari bilan aloqalarni boshqaradi.
- **QWidget** - Bu PyQt5 ning asosiy vidjeti bo'lib, barcha GUI elementlari undan meros olishadi.
- **QMainWindow** - Bu PyQt5 dagi ilg'or vidjet bo'lib, asosiy oynaning strukturasi uchun ishlatiladi.
- **QPushButton**, **QLabel**, **QLineEdit**, **QComboBox** kabi turli vidjetlar bilan ishlash imkoniyatlari.

### PyQt5 bilan ishlashni boshlash uchun asosiy kod namunasi:

```python
import sys
from PyQt5.QtWidgets import QApplication, QWidget, QPushButton

# QApplication yaratish
app = QApplication(sys.argv)

# QWidget (asosiy oynani yaratish)
window = QWidget()
window.setWindowTitle('PyQt5 Misol')
window.setGeometry(100, 100, 300, 200)

# Tugma yaratish
button = QPushButton('Salom', window)
button.setGeometry(100, 80, 100, 40)

# Oynani ko'rsatish
window.show()

# Dastur bajarilishini boshlash
sys.exit(app.exec_())
```

Izoh:
- `QPushButton` - foydalanuvchi tugmani bosganda ishlaydi. Bu yerda `Salom` tugmasi yaratilgan.
- `window.show()` - oynani ekranga chiqaradi.
- `app.exec_()` - dastur oynasining asosi bo'lib, foydalanuvchi bilan o'zaro aloqalarni kutadi.

## 1.2. PyQt5 bilan GUI (Graphical User Interface) dasturlashning afzalliklari

PyQt5 GUI yaratishning bir necha afzalliklari mavjud:
- **Multiplatforma**: PyQt5 orqali yaratgan GUI ilovalari Windows, Linux va macOS platformalarida ishlashi mumkin.
- **Chiroyli va interaktiv interfeyslar**: Qt yordamida zamonaviy va qulay interfeyslar yaratish mumkin.
- **Kengaytirilgan vidjetlar**: PyQt5 ko'plab turli vidjetlarga ega, shuning uchun har qanday dastur uchun kerakli GUI elementlarini yaratish mumkin.
- **Qo'llab-quvvatlash va hujjatlar**: PyQt5 keng qo'llab-quvvatlanadi va hujjatlari juda yaxshi taqdim etilgan, bu esa dasturchilar uchun o'rganishni osonlashtiradi.

### GUI dasturini yaratishda qanday foydalanilishi haqida kod misoli:

```python
from PyQt5.QtWidgets import QApplication, QWidget, QVBoxLayout, QLabel, QPushButton

app = QApplication([])

window = QWidget()
window.setWindowTitle('Afzalliklar Misoli')

# Vertikal joylashtirish
layout = QVBoxLayout()

# Yangi yorliq (label) va tugma (button)
label = QLabel('Bu PyQt5 GUI dasturining misolidir!')
button = QPushButton('Tugmani bosing')

# Joylashtirish
layout.addWidget(label)
layout.addWidget(button)

# Layoutni oynaga qo'shish
window.setLayout(layout)

window.show()

app.exec_()
```

Izoh:
- **QVBoxLayout** - vertikal tarzda elementlarni joylashtiradi.
- **QLabel** va **QPushButton** vidjetlari yordamida foydalanuvchiga xabar berish va interaktivlik yaratish mumkin.

## 1.3. PyQt5 va boshqa GUI kutubxonalari (Tkinter, Kivy, wxPython) solishtirishi

### Tkinter:
- **Afzalliklari**: Tkinter - Python'ning eng mashhur va eng oson ishlatiladigan GUI kutubxonasi. O'rnatilgan va oddiy interfeislarga ega.
- **Kamchiliklari**: Ko'p imkoniyatlarga ega emas, zamonaviy dizaynni yaratish qiyin.

### Kivy:
- **Afzalliklari**: Kivy mobil platformalar uchun ham qo'llab-quvvatlaydi (Android, iOS). Animatsiyalar va 3D grafikalar yaratish mumkin.
- **Kamchiliklari**: Desktop ilovalar uchun ishlatilishi kamroq.

### wxPython:
- **Afzalliklari**: Cross-platform (Windows, Linux, macOS) uchun mukammal qo'llab-quvvatlash.
- **Kamchiliklari**: Kivy va Tkinter bilan taqqoslaganda o'rganish biroz qiyinroq.

## 1.4. PyQt5 asosiy komponentlari

### Qt Designer:
Qt Designer - PyQt5 ilovalarini vizual tarzda yaratishga yordam beruvchi vosita. Bu GUI interfeyslarini qurish uchun ishlatiladi.

```bash
# Qt Designer ni ishga tushurish:
designer
```

### PyQt5 modullari:
- **QtWidgets**: PyQt5 ning asosiy moduli bo'lib, GUI elementlarini yaratish uchun kerak.
- **QtCore**: Signal va slot mexanizmi, fayl tizimi va vaqtni boshqarish uchun ishlatiladi.
- **QtGui**: Grafikalar va tasvirlarni boshqarish uchun ishlatiladi.

### Modullarni import qilish misoli:

```python
from PyQt5.QtWidgets import QApplication, QWidget, QPushButton
from PyQt5.QtCore import Qt
from PyQt5.QtGui import QIcon

app = QApplication([])

window = QWidget()
window.setWindowTitle('Modul Misol')
window.setGeometry(100, 100, 300, 200)

button = QPushButton('Salom', window)
button.setIcon(QIcon('icon.png'))
button.setGeometry(100, 80, 100, 40)

window.show()
app.exec_()
```

Izoh:
- **QIcon** moduli tasvirni (ikonka) qo'shish uchun ishlatiladi.
- **QtCore.Qt** turli holatlar va sozlamalarni boshqarish uchun kerak.

